name: my-fullstack-setup

networks:
  internal-network:
    driver: bridge

services:
  server:
    build:
      context: ../..
      dockerfile: ./apps/server/Dockerfile
    container_name: my-fullstack-setup-server
    restart: unless-stopped
    ports:
      - '${SERVER_PORT}:8015'
    env_file:
      - .env.docker
    depends_on:
      - db
      - redis
    networks:
      - internal-network
  db:
    image: postgres:17.5-alpine
    container_name: my-fullstack-setup-postgres
    restart: unless-stopped
    shm_size: 128mb
    env_file:
      - .env.docker
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      TZ: 'UTC'
      PGTZ: 'UTC'
    ports:
      - '${DB_PORT}:5432'
    volumes:
      - my-fullstack-setup_postgres_data:/var/lib/postgres/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal-network

  redis:
    container_name: my-fullstack-setup-redis
    restart: unless-stopped
    image: redis/redis-stack-server:7.4.0-v3
    env_file:
      - .env.docker
    ports:
      - '${REDIS_APP_PORT}:6379'
    volumes:
      - my-fullstack-setup_redis_data:/var/lib/redis/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - internal-network
volumes:
  my-fullstack-setup_postgres_data:
    driver: local
  my-fullstack-setup_redis_data:
    driver: local